Code:

#include <iostream>

using namespace std;
class node{
  public :
  int data;
  node* prev;
  node* next;
  
  node(int d){
      this->data = d;
      this->prev = NULL;
      this->next = NULL;
  }
   ~node(){
      int val = this->data;
      if(this->next !=NULL){
          delete next ;
          this->next = NULL;
      }
      cout<<"Deleted node with value of "<<val<<endl;
  }
};

void print(node* &head){
    node* temp = head;
    
    while(temp!=NULL){
        cout<<temp->data <<" ";
        temp= temp->next;
    }
    cout<<endl;
}
int getLength(node* &head){
    node* temp =head;
    int ct =0;
    while(temp!=NULL){
        ct++;
        temp=temp->next;
    }
    return ct;
}
void insertAtHead(node*  &head,node* &tail,int d){
    node* temp = new node(d);
    if(head == NULL){
        head=temp;
        tail=temp;
    }
    else{
        
    
    temp->next = head;
    head->prev = temp;
    head=temp;
    }
}

void insertAtTail(node* &head,node* &tail,int d){
    node* temp = new node(d);
    if(tail==NULL){
        tail=temp;
        head=temp;
    }
    tail->next = temp;
    temp->prev = tail;
    tail = temp;
}
void insertAtPosition(node* &head,node* &tail,int d,int p){
    if(p==1){
        insertAtHead(head,tail,d);
        return;
    }
    node* temp = head;
    int cnt =1;
    
    while(cnt<p-1){
        temp=temp->next;
        cnt++;
    }
    cout<<cnt<<endl;
    // cout<<temp->next->data <<endl;
    if(temp->next == NULL){
        insertAtTail(head,tail,d);
        return;
    }
    node* node1 = new node(d);
    node1->next = temp->next;
     node1->prev= temp;
    temp->next->prev = node1;
    temp->next = node1;
    
    
    
}

void deletion(node* &head,node* &tail,int p){
    //deleting head node
    if(p==1){
        node* temp = head;
        temp->next->prev = NULL;
        head = temp->next;
        temp->next= NULL;
        delete temp;
    }
    //deleting other nodes
    else{
        node* curr = head;
        node* prev = NULL;
        int cnt=1;
        
        while(cnt<p){
            prev =curr;
            curr = curr->next;
            cnt++;
        }
        if(curr->next == NULL){
            tail= prev;
        }
        curr->prev = NULL;
        prev->next = curr->next;
        curr->next=NULL;
        delete curr;
    }
}

int main()
{
    cout<<"Hello World"<<endl;
    node* node1 = new node(10);
    node* head = NULL;
    node* tail = NULL;
    print(head);
    cout<<endl;
    insertAtHead(head,tail,20);
    print(head);
    cout<<endl;
    insertAtHead(head,tail,30);
    print(head);
    cout<<endl;
    insertAtTail(head,tail,45);
    print(head);
    cout<<endl;
    insertAtHead(head,tail,40);
    print(head);
    cout<<endl;
    insertAtHead(head,tail,50);
    print(head);
    cout<<endl;
    insertAtTail(head,tail,20);
    print(head);
    cout<<endl;
    insertAtPosition(head,tail,15,7);
    print(head);
    cout<<endl;
    
    cout<<"Length of ll : "<<getLength(head)<<endl;
    deletion(head,tail,7);
    print(head);
    cout<<endl;

    return 0;
}
