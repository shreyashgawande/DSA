Code:

#include <iostream>

using namespace std;

class node{
  public :
  int data;
  node* next;
  
  node(int d){
      this->data=d;
      this->next= NULL;
  }
  
  ~node(){
      int val = this->data;
      if(this->next != NULL){
          delete next ;
          next = NULL;
      }
      cout<<"Deleted node with value of "<<val<<endl;
  }
};
void insert(node* &tail,int element,int d){
    if(tail == NULL){
        node* temp = new node(d);
        tail=temp;
        temp->next=temp;
        
    }
    else{
        node* curr = tail;
        
        while(curr->data != element){
            curr=curr->next;
        }
        node* temp = new node(d);
        temp->next = curr->next;
        curr->next = temp;
        
    }
}

void print(node* &tail){
    node* temp = tail;
    
    if(tail ==NULL){
        cout<< " Empty List !"<<endl;
        return;
    }
    
    do{
        cout<<temp->data <<" ";
        temp=temp->next;
        
    }while(temp!= tail);
    cout<<endl;
    
    
}

void deletion(node* &tail,int element){
    if(tail==NULL){
        cout<<"Empty List !"<<endl;
        return;
    }
    else{
        node* prev = tail;
        node* curr = prev->next;
        
        while(curr->data != element){
            prev = curr;
            curr = curr->next;
        }
        if(curr==prev){
            tail=NULL;
        }
        if(tail == curr){
            tail = curr->next;
        }
        prev->next = curr->next;
        curr->next = NULL;
        delete curr;
    }
}

int main()
{
    cout<<"Hello World"<<endl;
    node* tail = NULL;
    insert(tail,5,1);
    print(tail);
     insert(tail,1,2);
    print(tail);
    //  insert(tail,2,3);
    // print(tail);
    //  insert(tail,3,4);
    // print(tail);
    // insert(tail,4,6);
    // print(tail);
    // insert(tail,6,7);
    // print(tail);
    cout<<tail->data<< endl;
    
    deletion(tail,1);
    print(tail);

    return 0;
}
